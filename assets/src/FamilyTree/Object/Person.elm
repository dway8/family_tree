-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module FamilyTree.Object.Person exposing (..)

import FamilyTree.InputObject
import FamilyTree.Interface
import FamilyTree.Object
import FamilyTree.Scalar
import FamilyTree.ScalarCodecs
import FamilyTree.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


birthDay : SelectionSet (Maybe Int) FamilyTree.Object.Person
birthDay =
    Object.selectionForField "(Maybe Int)" "birthDay" [] (Decode.int |> Decode.nullable)


birthMonth : SelectionSet (Maybe Int) FamilyTree.Object.Person
birthMonth =
    Object.selectionForField "(Maybe Int)" "birthMonth" [] (Decode.int |> Decode.nullable)


birthYear : SelectionSet (Maybe Int) FamilyTree.Object.Person
birthYear =
    Object.selectionForField "(Maybe Int)" "birthYear" [] (Decode.int |> Decode.nullable)


deathDay : SelectionSet (Maybe Int) FamilyTree.Object.Person
deathDay =
    Object.selectionForField "(Maybe Int)" "deathDay" [] (Decode.int |> Decode.nullable)


deathMonth : SelectionSet (Maybe Int) FamilyTree.Object.Person
deathMonth =
    Object.selectionForField "(Maybe Int)" "deathMonth" [] (Decode.int |> Decode.nullable)


deathYear : SelectionSet (Maybe Int) FamilyTree.Object.Person
deathYear =
    Object.selectionForField "(Maybe Int)" "deathYear" [] (Decode.int |> Decode.nullable)


firstName : SelectionSet String FamilyTree.Object.Person
firstName =
    Object.selectionForField "String" "firstName" [] Decode.string


id : SelectionSet FamilyTree.ScalarCodecs.Id FamilyTree.Object.Person
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (FamilyTree.ScalarCodecs.codecs |> FamilyTree.Scalar.unwrapCodecs |> .codecId |> .decoder)


lastName : SelectionSet String FamilyTree.Object.Person
lastName =
    Object.selectionForField "String" "lastName" [] Decode.string


relationshipId : SelectionSet (Maybe FamilyTree.ScalarCodecs.Id) FamilyTree.Object.Person
relationshipId =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "relationshipId" [] (FamilyTree.ScalarCodecs.codecs |> FamilyTree.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


sex : SelectionSet String FamilyTree.Object.Person
sex =
    Object.selectionForField "String" "sex" [] Decode.string
