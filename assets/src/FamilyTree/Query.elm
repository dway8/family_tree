-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module FamilyTree.Query exposing (..)

import FamilyTree.InputObject
import FamilyTree.Interface
import FamilyTree.Object
import FamilyTree.Scalar
import FamilyTree.ScalarCodecs
import FamilyTree.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias FamilyRequiredArguments =
    { lastName : String }


family : FamilyRequiredArguments -> SelectionSet decodesTo FamilyTree.Object.Family -> SelectionSet decodesTo RootQuery
family requiredArgs object_ =
    Object.selectionForCompositeField "family" [ Argument.required "lastName" requiredArgs.lastName Encode.string ] object_ identity
